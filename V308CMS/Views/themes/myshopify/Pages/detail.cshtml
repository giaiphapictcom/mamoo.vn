@using V308CMS.Common
@using V308CMS.Data
@using V308CMS.Helpers
@using V308CMS.Helpers.Url
@model V308CMS.Data.Product
@{
    Layout = "~/Views/themes/" + ViewBag.domain + "/Layout/Layout.cshtml";
    var categoryPath =(List<ProductType>) ViewBag.CategoryPath;
}

@section header {
    <title>Sản Phẩm - @Model.Name</title>
    <meta name="keywords" content="@Model.Name">
    <meta property="og:url" content="@Request.Url">   
    <meta property="og:title" content="@Model.Name">
    <meta property="og:image"  itemprop="thumbnailUrl" content="@Model.Image.ToUrl(500,300)">
    <meta property="og:description" content="@(string.IsNullOrWhiteSpace(Model.Summary) && Model.Summary.Length>160?Model.Summary.Substring(0,159):Model.Summary)">
}
@section Breadcrumb{

<div class="clearfix breadcrumb-wrap">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="breadcrumb">
                    @if (categoryPath != null && categoryPath.Count > 0)
                    {
                        var firstCategory = categoryPath.FirstOrDefault();
                        if (firstCategory != null)
                        {
                            <h2>
                                @firstCategory.Name
                            </h2>
                        }

                        for (int total = categoryPath.Count, i = total - 1; i >= 0; i--)
                        {
                            var category = categoryPath[i];
                            if (i == total - 1)
                            {
                                <a href="/" title="Trang chủ">Home</a>
                                <span class="icon"><i class="fa fa-circle"></i></span>

                            }
                            if (i < total - 1 && i > 0)
                            {
                                <a href="@Url.ProductCategoryUrl(category)" title="@category.Name">@category.Name</a>
                                <span class="icon"><i class="fa fa-circle"></i></span>
                            }
                            if (i == 0)
                            {
                                <strong>
                                    @category.Name
                                </strong>
                            }

                        }
                    }

                </div>
            </div>
        </div>
    </div>
</div>

   
}

<div class="row" id="product">

    <div class="col-xs-12 col-main col-md-12 col-sm-12">
        <div itemscope itemtype="http://schema.org/Product" class="product">
            <meta itemprop="url" content="@Url.ProductDetailUrl(Model)">
            <meta itemprop="image" content="@ImageHelper.Crop(@Model.Image, 500)">
            <meta itemprop="shop-currency" content="VND">

            <div class="row">
                <div class="col-xs-12 col-md-5 col-sm-5 product-img-box">
                    <a href="#" class="zoom" id="placeholder">
                        <img id="product-featured-image" src="@ImageHelper.Crop(@Model.Image, 500)" alt="@Model.Name" data-zoom-image="@ImageHelper.Crop(@Model.Image, 1200)" />
                    </a>
                    <div id="zt_list_product" class="thumbs">
                        <div class="image-item">
                            <a href="javascript:void(0)" data-image="@ImageHelper.Crop(@Model.Image, 500)" data-zoom-image="@ImageHelper.Crop(@Model.Image, 1200)" >
                                <img src="@ImageHelper.Crop(@Model.Image)" alt="@Model.Name">
                            </a>
                        </div>
                        @if (Model.ProductImages != null & Model.ProductImages.Count>0)
                        {
                            foreach (ProductImage img in Model.ProductImages) {
                                <div class="image-item">
                                    <a href="javascript:void(0)" data-image="@ImageHelper.Crop(@img.Name, 500)"  data-zoom-image="@ImageHelper.Crop(@img.Name, 1200)">
                                        <img src="@ImageHelper.Crop(@img.Name)" alt="@Model.Name">
                                    </a>
                                </div>
                            }
                        }
                    </div>
                </div>

                <div class="col-xs-12 col-md-7 col-sm-7 product-shop">
                    <div itemprop="offers" itemtype="http://schema.org/Offer">
                        <header class="product-title ">
                            <h2 itemprop="name">@Model.Name</h2>
                        </header>

                        <div class="star-price">
                            <div class="price-box">
                                <p class="regular-product">
                                    @if (Model.Price > 0)
                                    {
                                        <span class="price" itemprop="price">
                                                <span class="money">@String.Format("{0: 0,0}", (Model.Price)) @ViewBag.MoneyShort</span>
                                        </span>
                                    }
                                    
                                </p>
                            </div>
                        </div>

                        <div class="availability">
                            <p class="product-inventory">
                                <label>Tình trạng</label><span><span>@(Model.Quantity > 0 ? "Còn hàng" :"Hết hàng")</span></span>
                            </p>
                        </div>
                        <link itemprop="availability" href="http://schema.org/InStock"/>

                        <span class="shopify-product-reviews-badge" data-id="@Model.ID"></span>

                        <div class="short-description">@Model.Summary</div>

                       
                        <div class="product-bottom">
                            <form action="@Url.AddToCartUrl()" method="post" enctype="multipart/form-data" id="add-to-cart-form">
                                <input name="id" type="hidden" value="@Model.ID"/>
                                @if (Model.Quantity > 0)
                                {
                                    <label>Số lượng:</label>
                                    <div class="wrap-qty">
                                        <span class="down-qty"></span>
                                        <input class="qty" type="text" id="quantity" name="quantity" value="1">
                                        <span class="up-qty"></span>
                                    </div>
                                }
                                <div class="cart-wraper">
                                    @if (Model.Quantity > 0){
                                        <button type="submit" name="add" class="btn " id="product-add-to-cart" value="@Model.ID">Thêm vào giỏ hàng</button>
                                        
                                    }
                                    else{
                                        <span style="color: #f00; font-weight: bold">Sản phẩm tạm hết hàng</span>
                                    }
                                    <a data-id="@Model.ID" class="wishlist btn" href="javascript:void(0)" data-toggle="tooltip" data-placement="top" title="Yêu thích"><span><i class="fa fa-heart" aria-hidden="true"></i></span></a>

                                </div>
                            </form>
                        </div>
                       
                    </div>
                </div>
            </div>
        </div>

        <div class="product-tabs ">
            <ul class="nav nav-tabs" id="myTab">
                <li class="active">
                    <a data-toggle="tab" href="#collapse-tab1">
                        <span class="hidden-xs">Thông tin sản phẩm</span>
                        <span class="visible-xs">Thông tin</span>
                        
                    </a>
                </li>
                <li><a data-toggle="tab" href="#collapse-tab2">Đánh giá</a></li>
                <li>                 
                    <a href="@Url.FacebookShareUrl(WebUtility.UrlEncode(Request.Url.ToString()))" target="_blank" class="fb-share" title="Chia sẻ trên facebook">                       
                        <span class="hidden-xs"> Chia sẻ Facebook</span>
                        <span class="visible-xs">Share</span>
                    </a>
                </li>
            </ul>

            <div id="myTabContent" class="tab-content">
                <div id="collapse-tab1" class="tab-pane fade in active">
                    @Html.Raw(@Model.Detail.Replace("\n", "<br />"))
                </div>
                <div id="collapse-tab2" class="tab-pane fade">
                    @*<div id="shopify-product-reviews" data-id="7825635209"></div>*@
                    <div class="fb-comments" data-href="@Ultility.LocDau(@Model.Name)-d@(Model.ID).html" data-width="100%" data-numposts="5" data-colorscheme="light"></div>
                </div>
            </div>
        </div>
        <script>
            jQuery('#myTab a').click(function (e) {
                if (!$(this).hasClass("fb-share")) {
                    e.preventDefault();
                    jQuery(this).tab('show');
                }
                
            })
        </script>
    </div>

</div>


<script>
    jQuery(document).ready(function() {
        jQuery("#zt_list_product").owlCarousel({
            itemsCustom: [
                [320, 1],
                [360, 2],
                [450, 3],
                [600, 3],
                [700, 3],
                [1000, 4],
                [1200, 4],
                [1400, 4],
                [1600, 4]
            ],
            navigation: true,
            navigationText: ['<i class="arrow_carrot-left"></i>', '<i class="arrow_carrot-right"></i>']
        });     
        jQuery('#product-featured-image').elevateZoom();

    });
  
    var selectCallback = function(variant, selector) {
        if (variant) {
            jQuery('.variant-sku').text(variant.sku);
        } else {
            jQuery('.variant-sku').empty();
        }

        if (variant && variant.featured_image) {
        }
        var addToCart = jQuery('#product-add-to-cart'),
            productPrice = jQuery('.product .price'),
            comparePrice = jQuery('.product .compare-price'),
            skuproduct = jQuery('.product-sku');

        var sku = jQuery('#product-selectors').find(':selected').attr('data-sku');
        jQuery('.product-sku').html(sku);
        if (variant) {
            if (variant.available) {
                // We have a valid product variant, so enable the submit button
                addToCart.removeClass('disabled').removeAttr('disabled').val('Add to Cart');

            } else {
                // Variant is sold out, disable the submit button
                addToCart.val('Sold Out').addClass('disabled').attr('disabled', 'disabled');
            }

            // Regardless of stock, update the product price
            productPrice.html(Shopify.formatMoney(variant.price, "<span class=money>${{amount}}</span>"));

            // Also update and show the product's compare price if necessary
            if (variant.compare_at_price > variant.price) {
                productPrice.addClass("on-sale");
                comparePrice
                    .html(Shopify.formatMoney(variant.compare_at_price, "<span class=money>${{amount}}</span>"))
                    .show();
            } else {
                comparePrice.hide();
                productPrice.removeClass("on-sale");
            }

            // BEGIN SWATCHES
            var form = jQuery('#' + selector.domIdPrefix).closest('form');
            for (var i = 0, length = variant.options.length; i < length; i++) {
                var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] + '"]');
                if (radioButton.size()) {
                    radioButton.get(0).checked = true;
                }
            }
            // END SWATCHES


        } else {
            // The variant doesn't exist. Just a safeguard for errors, but disable the submit button anyway
            addToCart.val('Unavailable').addClass('disabled').attr('disabled', 'disabled');
        }

        //update variant inventory

        if (variant.available) {
            if (variant.inventory_management != null) {
                jQuery(".product-inventory span").text(variant.inventory_quantity + " in stock");
            } else {
                jQuery(".product-inventory span").text("Many in stock");
            }
        } else {
            jQuery(".product-inventory span").text("Out of stock");
        }


        /*begin variant image*/


        if (variant && variant.featured_image) {
            var originalImage = jQuery("#product-featured-image");
            var newImage = variant.featured_image;
            var element = originalImage[0];

            function removeExtent(str) {
                var arr = str.split("v=");
                if (arr[0])
                    return arr[0];
            }

            Shopify.Image.switchImage(newImage, element, function(newImageSizedSrc, newImage, element) {
                jQuery('#zt_list_product img').each(function() {

                    var grandSize = jQuery(this).attr('src');
                    grandSize = grandSize.replace('_compact', '');

                    grandSize = grandSize.replace('.jpg.jpg', '.jpg');
                    grandSize = removeExtent(grandSize);

                    newImageSizedSrc = newImageSizedSrc.replace('https:', '');
                    newImageSizedSrc = newImageSizedSrc.replace('http:', '');
                    newImageSizedSrc = newImageSizedSrc.replace('_grande', '');

                    newImageSizedSrc = newImageSizedSrc.replace('.jpg.jpg', '.jpg');

                    newImageSizedSrc = removeExtent(newImageSizedSrc);

                    if (grandSize == newImageSizedSrc) {
                        jQuery(this).parent().trigger('click');
                        return false;
                    }
                });
            });
        }

        /*end of variant image*/

    };

    jQuery(function($) {


        // Add label if only one product option and it isn't 'Title'. Could be 'Size'.


        // Hide selectors if we only have 1 variant and its title contains 'Default'.

        $('.selector-wrapper').hide();


        // Auto-select first available variant on page load. Otherwise the product looks sold out.


        $('.single-option-selector:eq(0)').val("Default Title").trigger('change');


        var reviewsTimeout = setInterval(function() {
            if (jQuery(".spr-badge-caption").length > 0) {
                jQuery(".spr-badge-caption").on('click', function() {
                    jQuery('html,body').animate({
                            scrollTop: jQuery(".panel:last").offset().top
                        },
                        '400');
                    jQuery("#collapse-tab4").collapse('show');
                });
                clearInterval(reviewsTimeout);
            }
        }, 1000);


    });
    jQuery(document).ready(function($) {
        $('.up-qty').click(function() {
            quantity = $('#quantity').val();
            $('#quantity').val(parseInt(quantity) + 1);
        });
        $('.down-qty').click(function() {
            quantity = $('#quantity').val();
            if (quantity > 1)
                $('#quantity').val(parseInt(quantity) - 1);
        });

    });

</script>
@{Html.RenderAction("LoadProductRelatived", "Async", new {productId = Model.ID, categoryId = Model.Type});}
<script src="/Content/Plugins/jquery.fancybox/jquery.fancybox.pack.js" type="text/javascript"></script>